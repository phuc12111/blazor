@page "/update/{Id}"
@using System.Net.Http
@using Newtonsoft.Json
@using System.Net.Http.Headers
@using System.Threading.Tasks
@using static HoiSinh.Pages.Index
@inject NavigationManager NavigationManager

<h3>Update Data</h3>

<div>
    <label for="newValue">New Value:</label>
    <input type="text" id="newValue" @bind="NewValue" />
    <button class="btn btn-primary" @onclick="UpdateData">Update</button>
</div>

@code {
    private string NewValue;
    private string Seq;
    private string Unit;

    [Inject]
    private HttpClient HttpClient { get; set; }

    [Parameter]
    public string Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var uri = new Uri(NavigationManager.Uri);
        Seq = System.Web.HttpUtility.ParseQueryString(uri.Query).Get("seq") ?? "";
        Unit = System.Web.HttpUtility.ParseQueryString(uri.Query).Get("unit") ?? "";


        await LoadData();
    }

    private async Task LoadData()
    {
        try
        {
            var apiUrl = $"http://14.241.182.251:59325/api/observation/signal/{Id}";

            using (var client = new HttpClient())
            {
                var request = new HttpRequestMessage(HttpMethod.Get, apiUrl);
                request.Headers.Add("token", "FV0pJclr75laKx/PEkYYF4kZaGxwEfsxTh+W6IPBVJAvIcE1J0gE/BEEMt16hHzkJ1ouLds10mB+v+ou8w7q4Zp5GeHUFcJpResHiwCfmjLDS1TrMVaKl0NWgHac7VgiiAVmP0LdhFua7CPIDK6LJSkxI+IYs8VllLGUq78mPrvcReSAqG70q8zJJPYRpe9kwjsAfwUo6ijwa3of7IkIn1vr27021U5gNwamJIwHQyRz6WGmNCldw7WdlBWGvCcdOvtcoLHic/TQ2f/rr5sqxI8RrVaYAXUM/qILaxKwVUhstaoZFM4J39ldA/aEuyLhpn1Cknv300HFg8nPCDOHQg==");

                var response = await client.SendAsync(request);
                response.EnsureSuccessStatusCode();

                var jsonString = await response.Content.ReadAsStringAsync();
                var apiResult = JsonConvert.DeserializeObject<ApiResult<Item>>(jsonString);

                if (apiResult.Status == "success")
                {
                    Seq = apiResult.Value.Seq;
                    Unit = apiResult.Value.Unit;
                }
                else
                {
                    Console.WriteLine($"Error: {apiResult.Message}");
                }
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine("Error: " + ex.Message);
        }
    }

    private async Task UpdateData()
    {
        var apiUrl = $"http://14.241.182.251:59325/api/observation/signal";

        try
        {
            using (var client = new HttpClient())
            {
                var requestData = new
                {
                    data = new
                    {
                        type = "edit",
                        code = Id,
                        seq = Seq,
                        value = NewValue,
                        value_string = "",
                        unit = Unit,
                        encounter = 24000402
                    },
                    token = "FV0pJclr75laKx/PEkYYF4kZaGxwEfsxTh+W6IPBVJAvIcE1J0gE/BEEMt16hHzkJ1ouLds10mB+v+ou8w7q4Zp5GeHUFcJpResHiwCfmjLDS1TrMVaKl0NWgHac7VgiiAVmP0LdhFua7CPIDK6LJSkxI+IYs8VllLGUq78mPrvcReSAqG70q8zJJPYRpe9kwjsAfwUo6ijwa3of7IkIn1vr27021U5gNwamJIwHQyRz6WGmNCldw7WdlBWGvCcdOvtcoLHic/TQ2f/rr5sqxI8RrVaYAXUM/qILaxKwVUhstaoZFM4J39ldA/aEuyLhpn1Cknv300HFg8nPCDOHQg==",
                    ip = "192:168:1:18",
                    code = "ad568891-dbc4-4241-a122-abb127901972"
                };

                var jsonContent = JsonConvert.SerializeObject(requestData);
                var content = new StringContent(jsonContent, System.Text.Encoding.UTF8, "application/json");

                var response = await client.PutAsync(apiUrl, content);
                response.EnsureSuccessStatusCode();
                Console.WriteLine(await response.Content.ReadAsStringAsync());

                
                NavigationManager.NavigateTo("/");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine("Error: " + ex.Message);
        }

    }
}
